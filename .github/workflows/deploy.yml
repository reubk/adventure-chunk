name: Deploy to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Get GitHub Actions IP
      id: ip
      uses: haythem/public-ip@v1.2

    - name: Setting environment variables
      run: |
        echo "AWS_DEFAULT_REGION=ap-southeast-1" >> $GITHUB_ENV
        echo "AWS_SG_ID=${{ secrets.AWS_SECURITY_GROUP_ID }}" >> $GITHUB_ENV
        
    - name: Add GitHub Actions IP to Security Group
      run: |
        echo "ðŸ”“ Adding GitHub Actions IP (${{ steps.ip.outputs.ipv4 }}) to security group..."
        aws ec2 authorize-security-group-ingress \
          --group-id ${{ env.AWS_SG_ID }} \
          --protocol tcp \
          --port 22 \
          --cidr ${{ steps.ip.outputs.ipv4 }}/32
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
        
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        timeout: 60s
        command_timeout: 30m
        script: |
          echo "ðŸš€ Starting deployment..."
          cd /var/www/adventure-chunk
          git pull origin main
          echo "ðŸ“¦ Installing dependencies..."
          cd client && npm ci
          echo "ðŸ”¨ Building frontend..."
          npm run build
          echo "ðŸ”„ Reloading nginx..."
          sudo systemctl reload nginx
          echo "âœ… Deployment complete!"
              
    - name: Remove GitHub Actions IP from Security Group
      run: |
        echo "ðŸ”’ Removing GitHub Actions IP (${{ steps.ip.outputs.ipv4 }}) from security group..."
        aws ec2 revoke-security-group-ingress \
          --group-id ${{ env.AWS_SG_ID }} \
          --protocol tcp \
          --port 22 \
          --cidr ${{ steps.ip.outputs.ipv4 }}/32
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
      if: always()
